<div id="wiki-content">
<h1 class="pt-4">Số học 7 - Bao hàm - Loại trừ (Inclusion-Exclusion)</h1>
<div class="breadcrumb"><nav aria-label="Breadcrumb"><ol>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/translate/">translate</a></li>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/translate/he/">he</a></li>
</ol></nav></div>
<div class>
<div id="wiki-body" class="gollum-markdown-content overflow-hidden ">
<div class="markdown-body ">
<p>Nguồn: <a href="https://www.hackerearth.com/practice/notes/number-theory-ii/">HackerEarth</a></p>
<p>Người dịch: Bùi Việt Dũng</p>
<p></p><div class="toc"><div class="toc-title">Table of Contents</div><ul><li><a href="#bao-hàm-loại-trừ-inclusion-exclusion">Bao hàm - loại trừ (Inclusion-Exclusion)</a><ul><li><a href="#phát-biểu-công-thức">Phát biểu công thức</a></li><li><a href="#công-thức-dành-cho-tập-hợp">Công thức dành cho tập hợp</a></li><li><a href="#lập-công-thức-bằng-biểu-đồ-venn-venn-diagrams">Lập công thức bằng biểu đồ Venn (Venn diagrams)</a></li><li><a href="#công-thức-dành-cho-xác-suất">Công thức dành cho xác suất</a></li><li><a href="#chứng-minh-công-thức-bao-hàm-loại-trừ">Chứng minh công thức bao hàm - loại trừ</a></li><li><a href="#ứng-dụng-đếm-số-số-nguyên-tố-cùng-nhau-với-một-số-cho-trước-trong-một-đoạn">Ứng dụng: Đếm số số nguyên tố cùng nhau với một số cho trước trong một đoạn</a></li></ul></li></ul></div>
<h1 class="editable"><a class="anchor" id="bao-hàm-loại-trừ-inclusion-exclusion" href="#bao-hàm-loại-trừ-inclusion-exclusion"></a>Bao hàm - loại trừ (Inclusion-Exclusion)</h1>
<h2 class="editable"><a class="anchor" id="phát-biểu-công-thức" href="#phát-biểu-công-thức"></a>Phát biểu công thức</h2>
<p>Công thức bao hàm - loại trừ được phát biểu như sau:</p>
<p>Để tính lực lượng của hợp của nhiều tập hợp, ta tính tổng lực lượng các tập hợp đó, rồi trừ đi lực lượng của giao của <strong>các cặp hai</strong> tập hợp khác nhau, rồi cộng lực lượng của giao các <strong>bộ ba</strong> tập hợp khác nhau, rồi trừ đi lực lượng của các <strong>bộ bốn</strong> tập hợp, và cứ thế cho đến khi ta xét đến giao của <strong>tất cả các tập hợp</strong>.</p>
<h2 class="editable"><a class="anchor" id="công-thức-dành-cho-tập-hợp" href="#công-thức-dành-cho-tập-hợp"></a>Công thức dành cho tập hợp</h2>
<p>Công thức bao hàm - loại trừ có dạng như sau:</p>
<p>$|\bigcup_{i=1}^n A_i| = \sum_{i=1}^n |A_i| - \sum_{i \ne j} |A_i \cap A_j| + |A_1 \cap A_2 \cap A_3| + |A_1 \cap A_2 \cap A_4| + … + |A_{n-2} \cap A_{n-1} \cap A_n| - … -$
$ (-1)^n|A_1 \cap A_2 \cap … \cap A_n|$</p>
<p>Ta có thể viết công thức này một cách gọn hơn bằng cách tính tổng của các tập con. Gọi $B$ là tập hợp các tập hợp $A_i$. Khi đó công thức bao hàm - loại trừ có dạng:</p>
<p>$|\bigcup_{i=1}^n A_i| = \sum_{C \subset B} (-1)^{|C|-1} | \bigcap_{e \in C} e |$</p>
<h2 class="editable"><a class="anchor" id="lập-công-thức-bằng-biểu-đồ-venn-venn-diagrams" href="#lập-công-thức-bằng-biểu-đồ-venn-venn-diagrams"></a>Lập công thức bằng biểu đồ Venn (Venn diagrams)</h2>
<p>Ta có biểu đồ sau biểu diễn ba tập hợp $A$, $B$ và $C$.</p>
<p><img src="https://vnoi.info/wiki/uploads/number-theory-venn-diagram.png" /></p>
<p>Khi đó ta thấy lực lượng của $A \cup B \cup C$ bằng lực lượng của $A$, $B$, $C$ trừ đi lực lượng của $A \cap B$, $B \cap C$, $C \cap A$ rồi cộng thêm lực lượng của $A \cap B \cap C$.</p>
<p>$| A \cup B \cup C | = |A| + |B| + |C| - |A \cap B| - |B \cap C| - |C \cap A| + |A \cap B \cap C|$</p>
<p>Tương tự, ta có thể lập công thức với $n$ tập hợp.</p>
<h2 class="editable"><a class="anchor" id="công-thức-dành-cho-xác-suất" href="#công-thức-dành-cho-xác-suất"></a>Công thức dành cho xác suất</h2>
<p>Nếu ta có $n$ biến cố $A_1, A_2,…,A_n$, $P(A_i)$ là xác suất của biến cố $A_i$, xác suất của biến cố hợp của chúng (nghĩa là biến cố "có ít nhất một trong số $n$ biến cố $A_1, A_2, …, A_n$ xảy ra") là</p>
<p>$P(\bigcup_{i=1}^n A_i) = \sum_{i=1}^n P(A_i)$ $- \sum_{i \ne j} P(A_i A_j)$ $+ P(A_1 A_2 A_3)$ $+ P(A_1 A_2 A_4)$ $+…+ P(A_{n-2} A_{n-1} A_n)$ $- … -$ $(-1)^n.P(A_1 A_2 … A_n)$</p>
<p>Nếu gọi $B$ là tập hợp các tập hợp $A_i$, công thức này cũng có thể viết gọn như sau:</p>
<p>$P(\bigcup_{i=1}^n A_i) = \sum_{C \subset B} (-1)^{|C|-1}. P(\bigcap_{e \in C} e)$</p>
<h2 class="editable"><a class="anchor" id="chứng-minh-công-thức-bao-hàm-loại-trừ" href="#chứng-minh-công-thức-bao-hàm-loại-trừ"></a>Chứng minh công thức bao hàm - loại trừ</h2>
<p>Để thuật tiện trong chứng minh, ta sử dụng công thức viết gọn sau:</p>
<p>$|\bigcup_{i=1}^n A_i| = \sum_{C \subset B} (-1)^{|C|-1} | \bigcap_{e \in C} e |$</p>
<p>với $B$ là tập hợp các tập hợp $A_i$.</p>
<p>Ta cần chứng minh một phần tử bất kì thuộc ít nhất một tập $A_i$, sẽ chỉ được đếm một lần trong công thức.</p>
<p>Xét một phần tử $x$ bất kì thuộc $k \geq 1$ tập hợp $A_i$. Ta thấy</p>
<ul>
<li>
<p>Trong công thức, khi $|C| = 1$, $x$ được đếm thêm $k$ lần.</p>
</li>
<li>
<p>Trong công thức, khi $|C| = 2$, $x$ được đếm bớt đi $\binom{k}{2}$ lần bởi $x$ bị đếm bớt đi khi ta xét một cặp 2 tập hợp khác nhau trong số $k$ tập hợp chứa phần tử $x$.</p>
</li>
<li>
<p>Trong công thức, khi $|C| = 3$, $x$ được đếm thêm $\binom{k}{3}$ lần.</p>
</li>
<li>
<p>…</p>
</li>
<li>
<p>Trong công thức, khi $|C| = k$, $x$ được đếm $\binom{k}{k}$ lần. Nếu $k$ lẻ thì $x$ được đếm thêm, nếu $k$ chẵn thì $x$ được đếm bớt.</p>
</li>
<li>
<p>Trong công thức, khi $|C| &gt; k$, $x$ không được đếm.</p>
</li>
</ul>
<p>Vì vậy, số lần $x$ được đếm là $T = \binom{k}{1} - \binom{k}{2} + \binom{k}{3} - … + (-1)^{i-1}.\binom{k}{i} + … + (-1)^{k-1}.\binom{k}{k}$.</p>
<p>Để tính $T$, ta khai triển $(1-x)^k$ bằng <strong>nhị thức Niu-tơn (Newton binomial)</strong>:</p>
<p>$(1-x)^k = \binom{k}{0} - \binom{k}{1}.x + \binom{k}{2}.x^2 - \binom{k}{3}.x^3 + … + (-1)^k.\binom{k}{k}.x^k$.</p>
<p>Ta thấy với $x=1$, $(1-x)^k = T-1$, do đó $T = (1-1)^k+1 = 1$ hay điều phải chứng minh.</p>
<h2 class="editable"><a class="anchor" id="ứng-dụng-đếm-số-số-nguyên-tố-cùng-nhau-với-một-số-cho-trước-trong-một-đoạn" href="#ứng-dụng-đếm-số-số-nguyên-tố-cùng-nhau-với-một-số-cho-trước-trong-một-đoạn"></a>Ứng dụng: Đếm số số nguyên tố cùng nhau với một số cho trước trong một đoạn</h2>
<p>Đây là một bài toán dễ dựa trên công thức bao hàm - loại trừ.</p>
<p>Cho hai số nguyên $n$ và $r$, đếm số số nguyên tố cùng nhau với $n$ trong đoạn $[1;r]$.</p>
<p>Thuật toán: Tìm <strong>phần bù (the inverse)</strong>: Đếm số số không nguyên tố cùng nhau với $n$.</p>
<p>Xét các ước nguyên tố của $n$, đánh số chúng từ 1 đến $k$.</p>
<p>Ta có thể tính số số trong đoạn $[1;r]$ chia hết cho $p_i$ bằng công thức $[\frac{r}{p_i}]$.</p>
<p>Tuy vậy, nếu ta chỉ tính tổng tất cả các số này, ta sẽ ra kết qủa sai. Đó là do một số số có thể chia hết cho nhiều $p_i$. Vì vậy ta cần sử dụng đến công thức bao hàm - loại trừ.</p>
<pre class="highlight"><code><span class="kt">int</span> <span class="nf">solve</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">p</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">p</span><span class="p">.</span><span class="n">push_back</span> <span class="p">(</span><span class="n">i</span><span class="p">);</span>
            <span class="k">while</span> <span class="p">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">n</span> <span class="o">/=</span> <span class="n">i</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="n">p</span><span class="p">.</span><span class="n">push_back</span> <span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">msk</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">msk</span><span class="o">&lt;</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">p</span><span class="p">.</span><span class="n">size</span><span class="p">());</span> <span class="o">++</span><span class="n">msk</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">mult</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">bits</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">p</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">msk</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">i</span><span class="p">))</span> <span class="p">{</span>
            <span class="o">++</span><span class="n">bits</span><span class="p">;</span>
            <span class="n">mult</span> <span class="o">*=</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
 
        <span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="n">r</span> <span class="o">/</span> <span class="n">mult</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">bits</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="n">sum</span> <span class="o">+=</span> <span class="n">cur</span><span class="p">;</span>
        <span class="k">else</span> <span class="n">sum</span> <span class="o">-=</span> <span class="n">cur</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">r</span> <span class="o">-</span> <span class="n">sum</span><span class="p">;</span>
<span class="p">}</span></code></pre>
</div>
</div>
</div>
</div>
