<div id="wiki-content">
<h1 class="pt-4">Public Key Cryptography</h1>
<div class="breadcrumb"><nav aria-label="Breadcrumb"><ol>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/cs/">cs</a></li>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/cs/crypto/">crypto</a></li>
</ol></nav></div>
<div class>
<div id="wiki-body" class="gollum-markdown-content overflow-hidden ">
<div class="markdown-body ">
<p><strong>Tác giả</strong>: Hoàng Gia Minh</p>
<p>Bài viết này nhằm giúp bạn đọc nắm được ý tưởng cơ bản của các hệ <strong>mã hóa khóa công khai</strong> (<strong>Public Key Cryptography</strong>) và một số ứng dụng của chúng. Ngoài ra, chúng ta cũng sẽ tìm hiểu về thuật toán mã hóa RSA, một hệ mã hóa khóa công khai được sử dụng khá phổ biến hiện nay.</p>
<p></p><div class="toc"><div class="toc-title">Table of Contents</div><ul><li><a href="#1-một-số-khái-niệm">1. Một số khái niệm</a></li><li><a href="#2-lịch-sử">2. Lịch sử</a><ul><li><a href="#2-1-mã-hóa-khóa-đối-xứng-symmetric-key-cryptography">2.1. Mã hóa khóa đối xứng (Symmetric-key cryptography)</a></li><li><a href="#2-2-mã-hóa-khóa-công-khai-public-key-cryptography">2.2. Mã hóa khóa công khai (Public-key cryptography)</a></li></ul></li><li><a href="#3-ứng-dụng">3. Ứng dụng</a><ul><li><a href="#3-1-mã-hóa-công-khai-public-key-encryption">3.1. Mã hóa công khai (Public-key encryption):</a></li><li><a href="#3-2-chữ-ký-điện-tử-digital-signatures">3.2. Chữ ký điện tử (Digital signatures):</a></li></ul></li><li><a href="#4-rsa">4. RSA</a><ul><li><a href="#4-1-mã-hóa">4.1 Mã hóa</a></li><li><a href="#4-2-giải-mã">4.2. Giải mã</a></li><li><a href="#4-3-sinh-khóa-key-generation">4.3. Sinh khóa (Key generation)</a></li><li><a href="#4-4-sample-code">4.4. Sample code</a></li></ul></li><li><a href="#5-tham-khảo">5. Tham khảo</a></li></ul></div>
<h1 class="editable"><a class="anchor" id="1-một-số-khái-niệm" href="#1-một-số-khái-niệm"></a>1. Một số khái niệm</h1>
<p><strong>Mã hóa</strong> (Encryption): Quá trình chuyển đổi thông tin từ dạng thông thường (có thể đọc được) sang dạng không đọc được (nếu không có khóa bí mật), nhằm bảo mật thông tin.</p>
<p><strong>Giải mã</strong> (Decryption): Là quá trình ngược của mã hóa - chuyển đổi từ thông tin đã mã hóa về thông tin ban đầu.</p>
<p><strong>Khóa</strong> (Key): Một đoạn thông tin được sử dụng để mã hóa và/hoặc giải mã.</p>
<h1 class="editable"><a class="anchor" id="2-lịch-sử" href="#2-lịch-sử"></a>2. Lịch sử</h1>
<h2 class="editable"><a class="anchor" id="2-1-mã-hóa-khóa-đối-xứng-symmetric-key-cryptography" href="#2-1-mã-hóa-khóa-đối-xứng-symmetric-key-cryptography"></a>2.1. Mã hóa khóa đối xứng (<em>Symmetric-key cryptography</em>)</h2>
<p>Cho đến trước năm 1976, các phương pháp mã hóa đều là mã hóa đối xứng.</p>
<p>Các hệ mã hóa đối xứng sử dụng <strong>cùng một khóa</strong> cho cả bên gửi lẫn bên nhận. Nói một cách chính xác hơn, hai khóa này có thể:</p>
<ul>
<li>giống nhau, hoặc</li>
<li>khác nhau nhưng có thể dễ dàng tìm ra được khóa còn lại nếu đã biết một khóa.</li>
</ul>
<p>Ưu điểm của các phương pháp này là đơn giản, tốc độ cao, mang lại hiệu quả tốt nếu bạn không chia sẻ khóa của mình cho người khác. Tuy nhiên, chúng lại có các nhược điểm sau:</p>
<ul>
<li>Để có thể trao đổi thông tin bí mật với nhau, hai bên phải thống nhất với nhau trước về khóa bí mật. Bài toán đặt ra là làm sao có thể đảm bảo việc gửi khóa cho nhau là bí mật.</li>
<li>Để đảm bảo trong 1 nhóm $n$ người cần phải có 1 số lượng khóa khá lớn - $\frac{n(n-1)}{2}$ khóa. Điều này dẫn đến một bài toán về việc lưu trữ, phân phối một số lượng lớn khóa mà vẫn phải đảm bảo sự an toàn của chúng.</li>
<li>Do bên gửi và nhận sử dụng chung khóa, chúng ta không thể xác định được nguồn gốc của một thông điệp (message).</li>
</ul>
<h2 class="editable"><a class="anchor" id="2-2-mã-hóa-khóa-công-khai-public-key-cryptography" href="#2-2-mã-hóa-khóa-công-khai-public-key-cryptography"></a>2.2. Mã hóa khóa công khai (<em>Public-key cryptography</em>)</h2>
<p>Vào năm 1874, William Stanley Jevons viết trong quyển <em>The Principles of Science</em> về mối liên hệ giữa các hàm một chiều và mật mã học. Đặc biệt, ông đã đi sâu vào bài toán phân tích ra thừa số nguyên tố (sau này được sử dụng trong thuật toán RSA).</p>
<blockquote>
<p><em>Liệu rằng bạn đọc có thể đoán được 2 số nguyên nào có tích bằng 8,616,460,799? Tôi nghĩ rằng ngoài tôi ra thì không ai có thể biết kết quả được.</em></p>
</blockquote>
<p>Năm 1976, Whitfield Diffie và Martin Hellman công bố bài báo <a href="http://www-ee.stanford.edu/~hellman/publications/24.pdf">New Directions in Cryptography</a>, làm thay đổi căn bản về cách các hệ mật mã hoạt động. Bài báo đã đưa ra một hệ thống mã hóa bất đối xứng trong đó nêu ra phương pháp trao đổi khóa công khai, giải quyết các hạn chế của mã đối xứng.</p>
<p>Khác với mã đối xứng, mã hóa khóa bất đối xứng sử dụng một cặp khóa: <strong>khóa công khai</strong> (<strong>public key</strong>) và <strong>khóa bí mật</strong> (<strong>private key</strong>). Hai khóa này được xây dựng sao cho từ một khóa, rất khó có cách sinh ra được khóa còn lại. Một khóa sẽ dành để mã hóa, khóa còn lại dùng để giải mã. Chỉ có người sở hữu nắm được khóa bí mật trong khi khóa công khai được phổ biến rộng rãi. Hình vẽ sau minh họa việc mã hóa và giải mã:</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Public_key_encryption.svg/500px-Public_key_encryption.svg.png" alt="Hình minh họa" /></p>
<h1 class="editable"><a class="anchor" id="3-ứng-dụng" href="#3-ứng-dụng"></a>3. Ứng dụng</h1>
<p>Mật mã hóa khóa công khai hay còn gọi là mã hóa bất đối xứng có 2 ứng dụng phổ biến sau:</p>
<h2 class="editable"><a class="anchor" id="3-1-mã-hóa-công-khai-public-key-encryption" href="#3-1-mã-hóa-công-khai-public-key-encryption"></a>3.1. Mã hóa công khai (<em>Public-key encryption</em>):</h2>
<p>Một thông điệp được mã hóa bằng khóa công khai của người nhận. Thông điệp này chỉ có thể giải mã được bằng khóa bí mật mà chỉ người nhận có.</p>
<h2 class="editable"><a class="anchor" id="3-2-chữ-ký-điện-tử-digital-signatures" href="#3-2-chữ-ký-điện-tử-digital-signatures"></a>3.2. Chữ ký điện tử (<em>Digital signatures</em>):</h2>
<p>Chữ ký điện tử là thông tin đi kèm với dữ liệu nhằm mục đích xác định chủ sở hữu của dữ liệu đó.</p>
<p>Một văn bản được <em>"ký"</em> bằng khóa bí mật của người gửi và có thể được xác nhận bới bất kỳ ai có khóa công khai của người gửi.</p>
<p>Cụ thể hơn, bên gửi sẽ tính ra mã hash $h$ của văn bản, sau đó dùng khóa bí mật để mã hóa $h$ thành $\sigma$ rồi gửi cho bên nhận văn bản đó cùng với <em>"chữ ký"</em> $\sigma$ . Bên nhận thực hiện xác nhận như sau:</p>
<ul>
<li>Tính mã hash $h$ của văn bản.</li>
<li>Giải mã <em>"chữ ký"</em> $\sigma$ thành $h'$ bằng khóa công khai.</li>
<li>So sánh $h$ và $h'$, nếu chúng bằng nhau thì quá trình xác thực thành công, ngược lại quá trình xác thực thất bại.</li>
</ul>
<h1 class="editable"><a class="anchor" id="4-rsa" href="#4-rsa"></a>4. RSA</h1>
<p>RSA là một trong những phương pháp mã hóa khóa công khai đầu tiên được ứng dụng rộng rãi trong việc đảm bảo an toàn khi truyền thông tin. Sự bất đối xứng của hệ mã này được dựa trên quan sát là khó có thể phân tích ra thừa số nguyên tố của một số là tích của 2 số nguyên tố. RSA được tạo thành bằng chữ cái đầu tiên của Ron <strong>R</strong>ivest, Adi <strong>S</strong>hamir, Lenonard <strong>A</strong>dleman, 3 người đầu tiên mô tả thuật toán vào năm 1977.</p>
<p>Nguyên lý cơ bản của RSA dựa trên nhận định là có thể tìm được 3 số nguyên dương rất lớn $e$, $d$ và $n$ mà:</p>
<p>$(m^e)^d \equiv m \pmod n \quad \forall m$</p>
<p>và dù cho có biết cả $e$, $n$ hay cả $m$ thì cũng rất khó để tìm ra $d$.</p>
<p>Tiếp theo chúng ta sẽ đi sâu vào từng công đoạn của 1 hệ mã, bao gồm việc mã hóa, giải mã và sinh khóa.</p>
<h2 class="editable"><a class="anchor" id="4-1-mã-hóa" href="#4-1-mã-hóa"></a>4.1 Mã hóa</h2>
<p>Giả sử rằng Bob muốn gửi mẫu tin $M$ cho Alice.</p>
<p>Đầu tiên thông điệp $M$ thành từng phần nhỏ, mỗi phần biểu diễn bởi một số nguyên $m$ sao cho $0 \leq m &lt; n$. Việc chuyển đổi này cần đảm bảo là ngẫu nhiên và $m$ không nhận các giá trị không an toàn (ví dụ như số 0 hay 1) nhưng vẫn đảm bảo là có thể suy ra $M$ từ $m$. Tiếp theo, Bob tính ra bản mã hóa $c$, sử dụng khóa công khai $e$ của Alice như sau:</p>
<p>$ c \equiv m^e \pmod n $</p>
<p>Bob gửi $c$ cho Alice.</p>
<p>Lưu ý rằng sao khi mã hóa, chính Bob cũng không thể giải mã được từ $c$ thành $m$.</p>
<h2 class="editable"><a class="anchor" id="4-2-giải-mã" href="#4-2-giải-mã"></a>4.2. Giải mã</h2>
<p>Alice tính lại ra $m$ từ $c$ dựa vào khóa bí mật $d$:</p>
<p>$ c^d \equiv (m^e)^d \equiv m \pmod n $</p>
<p>Dựa vào $m$, Alice có thể khôi phục lại mẫu tin ban đầu $M$.</p>
<h2 class="editable"><a class="anchor" id="4-3-sinh-khóa-key-generation" href="#4-3-sinh-khóa-key-generation"></a>4.3. Sinh khóa (Key generation)</h2>
<ul>
<li>
<p>Chọn 2 số nguyên tố khác nhau $p$ và $q$.</p>
</li>
<li>
<p>Tính $n = p * q$. Độ dài của $n$ (tính theo bit) chính là độ dài của khóa. Hiện nay người ta khuyến cáo sử dụng khóa có độ dài tối thiếu 2048 bit.</p>
</li>
<li>
<p>Tính $\varphi(n) = \varphi(p)\varphi(q) = (p - 1)(q - 1) = n - (p + q - 1)$. Trong đó $\varphi(n)$ là phi hàm Euler. $\varphi(n) =$ số lượng số nguyên dương nhỏ hơn $n$ mà nguyên tố cùng nhau với $n$.</p>
</li>
<li>
<p>Chọn một số nguyên $e$ thỏa mãn $1 &lt; e &lt; \varphi(n)$ và $gcd(e, \varphi(n)) = 1$.</p>
</li>
<li>
<p>Tính ra $d \equiv e^{-1} \pmod{\varphi(n)}$.</p>
</li>
</ul>
<p><strong>Chứng minh</strong></p>
<p>Để chứng minh tính đúng đắn của thuật toán sinh khóa trên, ta cần chứng minh rằng $m^{ed} \equiv m \pmod n$ với $n = pq$.</p>
<p><strong><em>1. Trường hợp $gcd(n, m) = 1$</em></strong></p>
<p>Ta có $ed \equiv 1 \pmod{\varphi(n)}$</p>
<p>Do $e$ và $d$ nguyên dương nên $ed = 1 + h\varphi(n)$ với $h$ là một số nguyên không âm.</p>
<p>Do đó $m^{ed} = m^{1 + h\varphi{n}} = m(m^{\varphi(n)})^h$.</p>
<p>Theo định lý Euler, $a^{\varphi(n)} \equiv 1 \pmod n \quad \forall a, n: gcd(a, n) = 1$ nên $m(m^{\varphi(n)})^h \equiv m(1)^h \equiv m \pmod n$.</p>
<p><strong><em>2. Trường hợp $gcd(n, m) \neq 1$</em></strong></p>
<p>Theo định lý phần dư Trung Hoa (Chinese Remainder Theorem), nếu $p$, $q$ nguyên tố cùng nhau thì:</p>
<p>$x \equiv y \pmod p \quad và \quad x \equiv y \pmod q \Rightarrow x \equiv y \pmod {pq}$.</p>
<p>Do vậy ta cần chứng mình 2 mệnh đề sau:</p>
<ul>
<li>$m^{ed} \equiv m \pmod p$</li>
<li>$m^{ed} \equiv m \pmod q$</li>
</ul>
<p>Vì $gcd(m, n) \neq 1 \Rightarrow gcd(m, n) = p \quad hoặc \quad gcd(m, n) = q$.</p>
<p>Không mất tính tổng quát, giả sử $gcd(m, n) = p$. Ta có:</p>
<ul>
<li>
<p>$gcd(m, p) = p \ \Rightarrow m \equiv 0 \pmod p \ \Rightarrow m^{ed} \equiv 0 \equiv m \pmod p$</p>
</li>
<li>
<p>$gcd(m, q) = 1 \ \Rightarrow m^{ed} \equiv m \pmod q$
(chứng mình tương tự trong trường hợp 1)</p>
</li>
</ul>
<h2 class="editable"><a class="anchor" id="4-4-sample-code" href="#4-4-sample-code"></a>4.4. Sample code</h2>
<pre class="highlight"><code><span class="c1">#!/usr/bin/env python
# -*- coding: utf-8 -*-
</span>
<span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">is_prime</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">all</span><span class="p">([(</span><span class="n">n</span> <span class="o">%</span> <span class="n">j</span><span class="p">)</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)])</span> <span class="ow">and</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">1</span>

<span class="c1"># Sinh ra số nguyên tố ngẫu nhiên trong [left, right) mà khác exclude
</span><span class="k">def</span> <span class="nf">random_prime</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">exclude</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
    <span class="k">if</span> <span class="n">is_prime</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="ow">and</span> <span class="n">p</span> <span class="o">!=</span> <span class="n">exclude</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">p</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">random_prime</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">exclude</span><span class="p">)</span>

<span class="c1"># Thuật toán tìm nghịch đảo modulo
# MMI(A, n) = x thỏa mãn (Ax) mod n = 1
</span><span class="n">MMI</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">A</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span><span class="n">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">N</span><span class="o">=</span><span class="mi">0</span><span class="p">:</span> <span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">t</span><span class="o">%</span><span class="n">N</span> <span class="ow">or</span> <span class="n">MMI</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">A</span><span class="o">%</span><span class="n">n</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">s</span><span class="o">-</span><span class="n">A</span><span class="o">/</span><span class="n">n</span><span class="o">*</span><span class="n">t</span><span class="p">,</span> <span class="n">N</span> <span class="ow">or</span> <span class="n">n</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">)[</span><span class="n">n</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">]</span>

<span class="c1"># Thuật toán sinh khóa
</span><span class="k">def</span> <span class="nf">rsa_generate</span><span class="p">():</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">random_prime</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
    <span class="n">q</span> <span class="o">=</span> <span class="n">random_prime</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
    <span class="n">n</span> <span class="o">=</span> <span class="n">p</span> <span class="o">*</span> <span class="n">q</span>
    <span class="n">t</span> <span class="o">=</span> <span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">q</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">e</span> <span class="o">=</span> <span class="n">random_prime</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">MMI</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>

    <span class="c1"># Kết quả trả về bao gồm:
</span>    <span class="c1">#    - Khóa công khai (n, e)
</span>    <span class="c1">#    - Khóa bí mật (n, d)
</span>    <span class="k">return</span> <span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">d</span>

<span class="k">def</span> <span class="nf">rsa_encrypt</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">pow</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">rsa_decrypt</span><span class="p">(</span><span class="n">encrypt_message</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">d</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">pow</span><span class="p">(</span><span class="n">encrypt_message</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>


<span class="c1"># Example
</span><span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">d</span> <span class="o">=</span> <span class="n">rsa_generate</span><span class="p">()</span>

<span class="k">print</span> <span class="s">'n={0}, e={1}, d={2}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">d</span><span class="p">)</span>

<span class="n">message</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">print</span> <span class="s">'Original message: {0}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>

<span class="n">encrypted_message</span> <span class="o">=</span> <span class="n">rsa_encrypt</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
<span class="k">print</span> <span class="s">'Encrypted message: {0}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">encrypted_message</span><span class="p">)</span>

<span class="n">decrypted_message</span> <span class="o">=</span> <span class="n">rsa_decrypt</span><span class="p">(</span><span class="n">encrypted_message</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">d</span><span class="p">)</span>
<span class="k">print</span> <span class="s">'Decrypted message: {0}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">decrypted_message</span><span class="p">)</span></code></pre>
<h1 class="editable"><a class="anchor" id="5-tham-khảo" href="#5-tham-khảo"></a>5. Tham khảo</h1>
<p><a href="https://en.wikipedia.org/wiki/Public-key_cryptography">Wiki - Public-key Cryptography</a></p>
<p><a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem)">Wiki - RSA</a></p>
<p><a href="https://en.wikipedia.org/wiki/History_of_cryptography">Wiki - History of Cryptography</a></p>
</div>
</div>
</div>
</div>
