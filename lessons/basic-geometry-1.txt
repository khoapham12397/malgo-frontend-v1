<div id="wiki-content">
<h1 class="pt-4">Hình học tính toán phần 1: Những khái niệm cơ bản</h1>
<div class="breadcrumb"><nav aria-label="Breadcrumb"><ol>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/algo/">algo</a></li>
<li class="breadcrumb-item"><a href="https://vnoi.info/wiki/gollum/overview/algo/geometry/">geometry</a></li>
</ol></nav></div>
<div class>
<div id="wiki-body" class="gollum-markdown-content overflow-hidden ">
<div class="markdown-body ">
<p><strong>Tác giả:</strong></p>
<ul>
<li>Lê Minh Hoàng - Phổ thông Năng khiếu, ĐHQG-HCM</li>
</ul>
<p><strong>Reviewer:</strong></p>
<ul>
<li>Trần Quang Lộc - ITMO University</li>
<li>Hoàng Xuân Nhật - Đại học Khoa học Tự nhiên, ĐHQG-HCM</li>
<li>Hồ Ngọc Vĩnh Phát - Đại học Khoa học Tự nhiên, ĐHQG-HCM</li>
</ul>
<hr/>
<p></p><div class="toc"><div class="toc-title">Table of Contents</div><ul><li><a href="#vector">Vector</a><ul><li><a href="#độ-lớn-của-vector">Độ lớn của vector</a></li></ul></li><li><a href="#phép-cộng-trừ-vector">Phép cộng trừ vector</a><ul><li><a href="#phép-cộng-2-vector">Phép cộng 2 vector</a></li><li><a href="#phép-trừ-2-vector">Phép trừ 2 vector</a><ul><li><a href="#vector-đối">Vector đối</a></li><li><a href="#định-nghĩa-hiệu-của-2-vector">Định nghĩa hiệu của 2 vector</a></li></ul></li></ul></li><li><a href="#tích-vô-hướng-dot-product">Tích vô hướng (Dot product)</a><ul><li><a href="#ví-dụ">Ví dụ</a></li></ul></li><li><a href="#tích-có-hướng-cross-product">Tích có hướng (Cross product)</a><ul><li><a href="#trong-không-gian-3-chiều">Trong không gian 3 chiều</a></li><li><a href="#trong-không-gian-2-chiều-mặt-phẳng">Trong không gian 2 chiều (mặt phẳng)</a></li><li><a href="#ví-dụ-1">Ví dụ</a></li></ul></li><li><a href="#khoảng-cách-giữa-điểm-và-đường-thẳng">Khoảng cách giữa điểm và đường thẳng</a></li><li><a href="#luyện-tập">Luyện tập</a></li></ul></div>
<p>Hình học mặc dù là một chủ đề hết sức phổ biến, song vẫn còn rất nhiều người không thích giải các bài toán hình học vì chúng khá khó chịu và lằng nhằng. Do đó, trong bài viết này, ta sẽ cùng tìm hiểu một vài khái niệm nhằm giúp cho các bài toán hình học trở nên bớt đáng sợ hơn.</p>
<p>Nếu đã nắm vững các khái niệm trong bài viết này, các bạn có thể chuyển sang <a class="internal absent" href="https://vnoi.info/wiki/algo/geometry/basic-geometry-2">phần 2</a>.</p>
<h1 class="editable"><a class="anchor" id="vector" href="#vector"></a>Vector</h1>
<p>Vector là một đối tượng có cả độ lớn và hướng. Hướng của vector là hướng từ điểm đầu đến điểm cuối của nó.</p>
<p><img src="https://i.imgur.com/JdJPAOc.png" /></p>
<p>Một vector thường được biểu diễn bằng một tia (một đoạn thẳng có hướng), hoặc bằng đồ thị dưới dạng một mũi tên nối từ điểm đầu $A$ tới điểm cuối $B$, và được ký hiệu là $\overrightarrow{\rm AB}$.</p>
<p><img src="https://i.imgur.com/H7bIO9o.png" /></p>
<p>Trong hình học phẳng, vector $\overrightarrow{\rm AB}$ có thể được biểu diễn bởi một cặp số $(x, y)$ cho biết tọa độ của vector, được xác định bằng hiệu các tọa độ tương ứng của điểm cuối $B$ với điểm đầu $A$:</p>
<div class="kdmath">$$
\begin{cases}
x = x_B - x_A \\
y = y_B - y_A
\end{cases}
$$</div>
<p><strong>Ví dụ:</strong> một vector từ $A(3, 1)$ đến $B(2, 3)$ có thể được biểu diễn bởi $\overrightarrow{\rm u} = (-1, 2)$.</p>
<p><img src="https://i.imgur.com/5ddR4P4.gif" /></p>
<h2 class="editable"><a class="anchor" id="độ-lớn-của-vector" href="#độ-lớn-của-vector"></a>Độ lớn của vector</h2>
<p>Độ lớn của $1$ vector được xác định bằng khoảng cách giữa điểm đầu và điểm cuối của nó.
<strong>Ví dụ:</strong> Độ lớn của $\overrightarrow{\rm AB}(x,y)$ kí hiệu là $|\overrightarrow{\rm AB}|$ và được xác định bằng:</p>
<p><img src="https://i.imgur.com/1rQrzkN.png" /></p>
<h1 class="editable"><a class="anchor" id="phép-cộng-trừ-vector" href="#phép-cộng-trừ-vector"></a>Phép cộng trừ vector</h1>
<p>Có một số phép toán có thể thực hiện trên vector, đơn giản nhất là phép cộng trừ vector: bạn có thể cộng trừ 2 vector với nhau để được một vector mới.</p>
<p>Xuyên suốt bài viết, chúng ta sẽ dùng dấu cộng (<strong>+</strong>) và trừ (<strong>-</strong>) để biểu diễn cho phép cộng và trừ vector.</p>
<h2 class="editable"><a class="anchor" id="phép-cộng-2-vector" href="#phép-cộng-2-vector"></a>Phép cộng 2 vector</h2>
<p><img src="https://i.imgur.com/Lblu42q.png" /></p>
<p>Giả sử ta có $2$ vector $\overrightarrow{\rm u}(x_1, y_1)$ và $\overrightarrow{\rm v}(x_2, y_2)$, tổng $\overrightarrow{\rm u}$ và $\overrightarrow{\rm v}$ được tính bằng công thức: $\overrightarrow{\rm u} + \overrightarrow{\rm v} = (x_1+x_2,y_1+y_2)$.</p>
<p><img src="https://i.imgur.com/PYkqiVG.gif" /></p>
<p><strong>Lưu ý:</strong> Thứ tự cộng các vector không quan trọng, cũng giống như phép cộng trên số (tính giao hoán).</p>
<p><img src="https://i.imgur.com/sKDldWR.png" /></p>
<h2 class="editable"><a class="anchor" id="phép-trừ-2-vector" href="#phép-trừ-2-vector"></a>Phép trừ 2 vector</h2>
<p><img src="https://i.imgur.com/p1QmwFb.png" /></p>
<h3 class="editable"><a class="anchor" id="vector-đối" href="#vector-đối"></a>Vector đối</h3>
<p>Cho vector $\overrightarrow{\rm a}$, vector có cùng độ lớn và ngược hướng với vector $\overrightarrow{\rm a}$ được gọi là vector đối của vector $\overrightarrow{\rm a}$, kí hiệu là $-\overrightarrow{\rm a}$.
Mỗi vector đều có vector đối, chẳng hạn vector đối của $\overrightarrow{\rm AB}$ là $\overrightarrow{\rm BA}$, nghĩa là $-\overrightarrow{\rm AB} = \overrightarrow{\rm BA}$.</p>
<p><img src="https://i.imgur.com/SY5FFFo.png" /></p>
<h3 class="editable"><a class="anchor" id="định-nghĩa-hiệu-của-2-vector" href="#định-nghĩa-hiệu-của-2-vector"></a>Định nghĩa hiệu của 2 vector</h3>
<p>Hiệu của vector $\overrightarrow{\rm u}$ với vector $\overrightarrow{\rm v}$ chính là tổng của $\overrightarrow{\rm u}$ và $-\overrightarrow{\rm v}$.</p>
<p><img src="https://i.imgur.com/z9pRvDQ.png" /></p>
<p>Nếu 2 vector có chung điểm đầu thì vector hiệu có hướng từ điểm cuối của $\overrightarrow{\rm v}$ đến điểm cuối của $\overrightarrow{\rm u}$. <strong>Ví dụ:</strong> $\overrightarrow{\rm OA} - \overrightarrow{\rm OB} = \overrightarrow{\rm BA}$.
Nếu 2 vector có chung điểm cuối thì vector hiệu có hướng từ điểm đầu của $\overrightarrow{\rm u}$ đến điểm đầu của $\overrightarrow{\rm v}$. <strong>Ví dụ:</strong> $\overrightarrow{\rm AO} - \overrightarrow{\rm BO} = \overrightarrow{\rm AB}$.</p>
<p><img src="https://i.imgur.com/Au2Yjk4.png" /></p>
<p>Nhấn vào <a href="https://www.desmos.com/calculator/po7zxtgzxw"><strong>đây</strong></a> để tương tác với hình trên Desmos.</p>
<h1 class="editable"><a class="anchor" id="tích-vô-hướng-dot-product" href="#tích-vô-hướng-dot-product"></a>Tích vô hướng (Dot product)</h1>
<p>Không như phép cộng trừ vector là tương đối trực quan và dễ hiểu, vector có 2 phép toán kém trực quan hơn là tích vô hướng (dot product) và tích có hướng (cross product).</p>
<p>Tích vô hướng có thể được định nghĩa bằng đại số hoặc hình học. 2 định nghĩa này là tương đương khi sử dụng tọa độ Descartes.</p>
<ul>
<li>Theo đại số, tích vô hướng là tổng các tích tọa độ tương ứng giữa chúng. Ví dụ: tích vô hướng của $\overrightarrow{\rm u}(x_1, y_1)$ và $\overrightarrow{\rm v}(x_2, y_2)$ là $\overrightarrow{\rm u} \cdot \overrightarrow{\rm v} = x_1x_2+y_1y_2$.</li>
<li>Theo hình học, tích vô hướng là tích độ lớn của $2$ vector và $\cos$ của góc giữa chúng. Ví dụ: tích vô hướng của $\overrightarrow{\rm u}(x_1, y_1)$ và $\overrightarrow{\rm v}(x_2, y_2)$ là
<span class="kdmath">$\overrightarrow{\rm u} \cdot \overrightarrow{\rm v} = | \overrightarrow{\rm u} | \cdot | \overrightarrow{\rm v} | \cdot \cos(\theta)$</span> với $\theta$ là góc hợp bởi $\overrightarrow{\rm u}$ và $\overrightarrow{\rm v}$.</li>
</ul>
<p><img src="https://i.imgur.com/iHks23u.png" /></p>
<h2 class="editable"><a class="anchor" id="ví-dụ" href="#ví-dụ"></a>Ví dụ</h2>
<p>Tính tích vô hướng của 2 vector $\overrightarrow{\rm u}(5,12)$ và $\overrightarrow{\rm v}(-6,8)$</p>
<p><img src="https://i.imgur.com/Qm8P625.png" /></p>
<div class="kdmath">$$
\begin{align}
\overrightarrow{\rm u} \cdot \overrightarrow{\rm v} &amp;= x_1x_2+y_1y_2 \\
&amp;= (-6).5+8.12 \\
&amp;= 66
\end{align}
$$</div>
<div class="kdmath">$$
\begin{align}
\overrightarrow{\rm u} \cdot \overrightarrow{\rm v} &amp;= | \overrightarrow{\rm u} | \cdot | \overrightarrow{\rm v} | \cdot \cos(\theta) \\
&amp;= 13.10.cos(59,49°) \\
&amp;= 65.9995359254\ldots \approx 66
\end{align}
$$</div>
<hr/>
<p>Từ $2$ định nghĩa, ta có thể tính góc $\theta$ giữa $\overrightarrow{\rm u}(x_1,y_1)$ và $\overrightarrow{\rm v}(x_2,y_2)$ như sau:
<span class="kdmath">$\cos(\theta) = \dfrac{\overrightarrow{\rm u} \cdot \overrightarrow{\rm v}}{|\overrightarrow{\rm u}| \cdot |\overrightarrow{\rm v}|}
\Longrightarrow \theta = \arccos\left(\dfrac{\overrightarrow{\rm u} \cdot \overrightarrow{\rm v}}{|\overrightarrow{\rm u}| \cdot |\overrightarrow{\rm v}|}\right) = \arccos\left(\dfrac{x_1x_2+y_1y_2}{\sqrt{x_1^2+y_1^2} \cdot \sqrt{x_2^2+y_2^2}}\right)$</span></p>
<p><strong>Lưu ý:</strong> tích vô hướng không chỉ giới hạn trong hình học phẳng, nghĩa là ta có thể sử dụng tích vô hướng cho các vector có số chiều tuỳ ý, và đẳng thức trên vẫn đúng.</p>
<h1 class="editable"><a class="anchor" id="tích-có-hướng-cross-product" href="#tích-có-hướng-cross-product"></a>Tích có hướng (Cross product)</h1>
<h2 class="editable"><a class="anchor" id="trong-không-gian-3-chiều" href="#trong-không-gian-3-chiều"></a>Trong không gian 3 chiều</h2>
<p>Tích có hướng là một phép nhân vector trong không gian ba chiều. Nó khác tích vô hướng ở chỗ kết quả thu được là một vector thay cho một vô hướng. Vector này <strong>vuông góc</strong> với mặt phẳng chứa 2 vector đầu vào của phép nhân.</p>
<p>Tích có hướng được định nghĩa bằng công thức: $\overrightarrow{\rm a} \times \overrightarrow{\rm b} = \overrightarrow{n} \cdot |\overrightarrow{\rm a}| \cdot |\overrightarrow{\rm b}| \cdot \sin(\theta)$ với:</p>
<ul>
<li>$\theta$ là góc giữa $\overrightarrow{\rm a}$ và $\overrightarrow{\rm b}$ $(0° \le \theta \le 180°)$</li>
<li>$\overrightarrow{n}$ là vectơ đơn vị vuông góc với $\overrightarrow{\rm a}$ và $\overrightarrow{\rm b}$. Thực tế có 2 vector thỏa điều kiện vuông góc là $\overrightarrow{n}$ và $-\overrightarrow{n}$, do đó hướng của vector đơn vị $\overrightarrow{n}$ phụ thuộc vào quy tắc bàn tay phải.</li>
</ul>
<table>
<tbody>
<tr>
<td><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Cross_product_vector.svg/220px-Cross_product_vector.svg.png" /></td>
<td><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Right_hand_rule_cross_product.svg/330px-Right_hand_rule_cross_product.svg.png" /></td>
</tr>
</tbody>
</table>
<h2 class="editable"><a class="anchor" id="trong-không-gian-2-chiều-mặt-phẳng" href="#trong-không-gian-2-chiều-mặt-phẳng"></a>Trong không gian 2 chiều (mặt phẳng)</h2>
<p>Nếu xét trong hình học phẳng thì vector kết quả lúc này vuông góc và có hướng đi vào/ra mặt phẳng đang xét, do đó ta có thể bỏ qua đặc điểm về hướng, và sử dụng tích có hướng như là một đại lượng vô hướng.</p>
<p>Tương tự tích vô hướng, tích có hướng trong không gian 2 chiều cũng có thể được định nghĩa bằng 2 cách:</p>
<ul>
<li>Theo đại số, tích có hướng giữa 2 vector $\overrightarrow{\rm u}(x_1,y_1)$ và $\overrightarrow{\rm v}(x_2,y_2)$ được định nghĩa bằng công thức:</li>
</ul>
<div class="kdmath">$$
\overrightarrow{\rm u} \times \overrightarrow{\rm v} = \begin{vmatrix} x_1 &amp; y_1 \\ x_2 &amp; y_2 \end{vmatrix} = x_1y_2-x_2y_1
$$</div>
<ul>
<li>Theo hình học, tích có hướng giữa 2 vector $\overrightarrow{\rm u}$ và $\overrightarrow{\rm v}$ được định nghĩa bằng công thức: $\overrightarrow{\rm u} \times \overrightarrow{\rm v} = |\overrightarrow{\rm u}| \cdot |\overrightarrow{\rm v}| \cdot \sin(\theta)$ với $\theta$ là góc hợp bởi 2 vector tính từ $\overrightarrow{\rm u}$ đến $\overrightarrow{\rm v}$ và <strong>ngược chiều kim đồng hồ</strong>.
Với góc $\alpha$ thỏa mãn $0° &lt; \alpha &lt; 180°$ thì $\sin(\alpha) &gt; 0$ nên nếu $\theta &lt; 180°$ thì tích có hướng <strong>dương</strong>, ngược lại tích có hướng <strong>âm</strong>.</li>
</ul>
<p><img src="https://i.imgur.com/idZv0Xz.png" /></p>
<p>Ta cũng có thể xác định dấu của tích có hướng bằng quy tắc bàn tay phải nhưng về bản chất thì cũng giống với việc xét góc theo chiều ngược kim đồng hồ.</p>
<h2 class="editable"><a class="anchor" id="ví-dụ-1" href="#ví-dụ-1"></a>Ví dụ</h2>
<p>Tính tích có hướng của 2 vector $\overrightarrow{\rm u}(5,12)$ và $\overrightarrow{\rm v}(-6,8)$</p>
<p><img src="https://i.imgur.com/Qm8P625.png" /></p>
<div class="kdmath">$$
\begin{align}
\overrightarrow{\rm u} \times \overrightarrow{\rm v} &amp;= \begin{vmatrix} x_1 &amp; y_1 \\ x_2 &amp; y_2 \end{vmatrix} = x_1y_2-x_2y_1 \\
&amp;= 5.8-(-6).12 \\
&amp;= 112
\end{align}
$$</div>
<div class="kdmath">$$
\begin{align}
\overrightarrow{\rm u} \times \overrightarrow{\rm v} &amp;= |\overrightarrow{\rm u}| \cdot |\overrightarrow{\rm v}| \cdot \sin(\theta) \\
&amp;= 13.10.sin(59,49°) \\
&amp;= 112.000273471\ldots \approx 112
\end{align}
$$</div>
<hr/>
<p><strong>Lưu ý:</strong> Một tích chất hữu dụng của tích có hướng trong hình học phẳng là
<span class="kdmath">$| \overrightarrow{\rm a} \times \overrightarrow{\rm b}| = | \overrightarrow{\rm a}| \cdot| \overrightarrow{\rm b}| \cdot\sin(\theta)$</span> bằng diện tích của hình bình hành có 2 cạnh bên là $\overrightarrow{\rm a}$ và $\overrightarrow{\rm b}$.</p>
<p><img src="https://i.imgur.com/50a2Cp7.png" /></p>
<p>Do đó, <strong>diện tích của một tam giác</strong> còn bằng một nửa giá trị tuyệt đối của tích có hướng với 2 vector thành phần là 2 cạnh của tam giác.</p>
<h1 class="editable"><a class="anchor" id="khoảng-cách-giữa-điểm-và-đường-thẳng" href="#khoảng-cách-giữa-điểm-và-đường-thẳng"></a>Khoảng cách giữa điểm và đường thẳng</h1>
<p>Tìm khoảng cách giữa điểm và đường thẳng rất thường gặp trong các bài toán hình học.</p>
<p><img src="https://i.imgur.com/WBPuzNU.png" /></p>
<p>Ví dụ bạn có 3 điểm $A, B, C$ và bạn muốn tìm khoảng cách từ $C$ đến đường thẳng đi qua $A$ và $B$. Bước đầu tiên là tính $\overrightarrow{\rm AB}$ và $\overrightarrow{\rm AC}$. Tiếp theo tính tích có hướng $\overrightarrow{\rm AB}\times\overrightarrow{\rm AC}$ và lấy trị tuyệt đối, rồi chia cho $AB$. Kết quả có được là khoảng cách cần tìm. Công thức này được giải thích như sau:</p>
<ul>
<li>Xét $\Delta{ABC}$, đặt $h$ là đường cao kẻ từ $C$ (khoảng cách từ $C$ đến $AB$) và đáy tương ứng là $AB$, ta có công thức:</li>
</ul>
<div class="kdmath">$$
\begin{cases}
S_{\Delta{ABC}} = \dfrac{h.AB}{2} \iff 2S_{\Delta{ABC}} = h.AB \\
2S_{\Delta{ABC}} = |\overrightarrow{\rm AB}\times\overrightarrow{\rm AC}|
\end{cases} \\
\begin{array}{}
\implies h.AB = |\overrightarrow{\rm AB}\times\overrightarrow{\rm AC}| \\
\iff h = \dfrac{|\overrightarrow{\rm AB}\times\overrightarrow{\rm AC}|}{AB}
\end{array}
$$</div>
<p>Mọi thứ trở nên phức tạp hơn một chút khi ta muốn tìm khoảng cách từ một đoạn thẳng đến một điểm. Trong trường hợp này, điểm gần nhất có thể là một trong hai đầu mút của đoạn thẳng thay vì là một điểm nào đó trên đường thẳng. Trong hình trên, điểm gần $C$ nhất trên đường thẳng $AB$ không nằm giữa $A$ và $B$ mà là tại $B$.</p>
<p>Có vài cách khác nhau để xử lý trường hợp này, một trong số đó là tích vô hướng. Đầu tiên, kiểm tra xem điểm gần nhất trên đường thẳng $AB$ có ra khỏi $B$ hay không bằng cách tính $\overrightarrow{\rm BA} \cdot \overrightarrow{\rm BC}$. Nếu tích này <strong>âm</strong>, nghĩa là góc giữa $\overrightarrow{\rm BA}$ và $\overrightarrow{\rm BC}$ là góc tù (do với góc $\alpha$ thỏa mãn $90° &lt; \alpha &lt; 270°$ thì $\cos(\alpha) &lt; 0$ ), do đó điểm gần $C$ nhất trên đoạn $AB$ sẽ là $B$.</p>
<p>Tương tự, nếu $\overrightarrow{\rm AB} \cdot \overrightarrow{\rm AC} &lt; 0$, điểm gần $C$ nhất là $A$. Nếu cả hai tích vô hướng đều $\ge 0$, thì điểm gần $C$ nhất sẽ nằm giữa $A$ và $B$.</p>
<pre class="highlight"><code><span class="cp">#define x first
#define y second
</span><span class="k">typedef</span> <span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">pii</span><span class="p">;</span>

<span class="c1">// Compute the dot product AB ⋅ AC</span>
<span class="kt">int</span> <span class="nf">dot</span><span class="p">(</span><span class="n">pii</span> <span class="n">A</span><span class="p">,</span> <span class="n">pii</span> <span class="n">B</span><span class="p">,</span> <span class="n">pii</span> <span class="n">C</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">pii</span> <span class="n">AB</span><span class="p">,</span> <span class="n">AC</span><span class="p">;</span>
    <span class="n">AB</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="n">AB</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="n">AC</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">C</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="n">AC</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">C</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">AB</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">AC</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">AB</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">AC</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Compute the cross product AB x AC</span>
<span class="kt">int</span> <span class="nf">cross</span><span class="p">(</span><span class="n">pii</span> <span class="n">A</span><span class="p">,</span> <span class="n">pii</span> <span class="n">B</span><span class="p">,</span> <span class="n">pii</span> <span class="n">C</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">pii</span> <span class="n">AB</span><span class="p">,</span> <span class="n">AC</span><span class="p">;</span>
    <span class="n">AB</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="n">AB</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="n">AC</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">C</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="n">AC</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">C</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">AB</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">AC</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">AB</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">AC</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Compute the distance from A to B</span>
<span class="kt">double</span> <span class="nf">distance</span><span class="p">(</span><span class="n">pii</span> <span class="n">A</span><span class="p">,</span> <span class="n">pii</span> <span class="n">B</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">dx</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">B</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">dy</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">B</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">sqrt</span><span class="p">(</span><span class="n">dx</span> <span class="o">*</span> <span class="n">dx</span> <span class="o">+</span> <span class="n">dy</span> <span class="o">*</span> <span class="n">dy</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Compute the distance from AB to C</span>
<span class="c1">// if isSegment is true, AB is a segment, not a line.</span>
<span class="kt">double</span> <span class="nf">linePointDist</span><span class="p">(</span><span class="n">pii</span> <span class="n">A</span><span class="p">,</span> <span class="n">pii</span> <span class="n">B</span><span class="p">,</span> <span class="n">pii</span> <span class="n">C</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">isSegment</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">double</span> <span class="n">dist</span> <span class="o">=</span> <span class="n">abs</span><span class="p">(</span><span class="n">cross</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">))</span> <span class="o">/</span> <span class="n">distance</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">isSegment</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">dot1</span> <span class="o">=</span> <span class="n">dot</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">A</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dot1</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">distance</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
        <span class="kt">int</span> <span class="n">dot2</span> <span class="o">=</span> <span class="n">dot</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dot2</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">distance</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">dist</span><span class="p">;</span>
<span class="p">}</span></code></pre>
<p>Đoạn code trên là cách mà mọi người thường dùng và có lẽ khá là dài, bên dưới là viết lại có sử dụng struct trong C++.</p>
<p></p><pre class="highlight"><code><span class="k">typedef</span> <span class="kt">double</span> <span class="n">db</span><span class="p">;</span>
<span class="k">struct</span> <span class="nc">vec</span> <span class="p">{</span>
    <span class="n">db</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span>
    <span class="n">vec</span><span class="p">(</span><span class="n">db</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">db</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="n">x</span><span class="p">(</span><span class="n">_x</span><span class="p">),</span> <span class="n">y</span><span class="p">(</span><span class="n">_y</span><span class="p">)</span> <span class="p">{}</span>
    <span class="n">db</span> <span class="n">dot</span><span class="p">(</span><span class="k">const</span> <span class="n">vec</span> <span class="o">&amp;</span><span class="n">other</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Compute the dot product</span>
        <span class="k">return</span> <span class="n">x</span> <span class="o">*</span> <span class="n">other</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">*</span> <span class="n">other</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">db</span> <span class="n">cross</span><span class="p">(</span><span class="k">const</span> <span class="n">vec</span> <span class="o">&amp;</span><span class="n">other</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Compute the cross product</span>
        <span class="k">return</span> <span class="n">x</span> <span class="o">*</span> <span class="n">other</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">y</span> <span class="o">*</span> <span class="n">other</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">db</span> <span class="n">length</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">sqrt</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">*</span> <span class="n">y</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="k">using</span> <span class="n">point</span> <span class="o">=</span> <span class="n">vec</span><span class="p">;</span> <span class="c1">// or use 'typedef vec point'</span>
<span class="n">vec</span> <span class="k">operator</span> <span class="o">-</span> <span class="p">(</span><span class="k">const</span> <span class="n">point</span> <span class="o">&amp;</span><span class="n">B</span><span class="p">,</span> <span class="k">const</span> <span class="n">point</span> <span class="o">&amp;</span><span class="n">A</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// vecAB = B - A</span>
    <span class="k">return</span> <span class="n">vec</span><span class="p">(</span><span class="n">B</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">B</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// if isSegment is true, AB is a segment, not a line.</span>
<span class="n">db</span> <span class="nf">linePointDist</span><span class="p">(</span><span class="k">const</span> <span class="n">point</span> <span class="o">&amp;</span><span class="n">A</span><span class="p">,</span> <span class="k">const</span> <span class="n">point</span> <span class="o">&amp;</span><span class="n">B</span><span class="p">,</span> <span class="k">const</span> <span class="n">point</span> <span class="o">&amp;</span><span class="n">C</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">isSegment</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">db</span> <span class="n">dist</span> <span class="o">=</span> <span class="n">abs</span><span class="p">((</span><span class="n">B</span> <span class="o">-</span> <span class="n">A</span><span class="p">).</span><span class="n">cross</span><span class="p">(</span><span class="n">C</span> <span class="o">-</span> <span class="n">A</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">A</span> <span class="o">-</span> <span class="n">B</span><span class="p">).</span><span class="n">length</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">isSegment</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">db</span> <span class="n">dot1</span> <span class="o">=</span> <span class="p">(</span><span class="n">A</span> <span class="o">-</span> <span class="n">B</span><span class="p">).</span><span class="n">dot</span><span class="p">(</span><span class="n">C</span> <span class="o">-</span> <span class="n">B</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dot1</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">(</span><span class="n">B</span> <span class="o">-</span> <span class="n">C</span><span class="p">).</span><span class="n">length</span><span class="p">();</span>
        <span class="n">db</span> <span class="n">dot2</span> <span class="o">=</span> <span class="p">(</span><span class="n">B</span> <span class="o">-</span> <span class="n">A</span><span class="p">).</span><span class="n">dot</span><span class="p">(</span><span class="n">C</span> <span class="o">-</span> <span class="n">A</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dot2</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">(</span><span class="n">A</span> <span class="o">-</span> <span class="n">C</span><span class="p">).</span><span class="n">length</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">dist</span><span class="p">;</span>
<span class="p">}</span></code></pre>
Nếu bạn sử dụng C++ thì bạn nên tìm hiểu về struct và tự viết class/struct geo_2D của riêng mình. Nó sẽ giúp các bài toán hình học trở nên đơn giản hơn nhiều.
<h1 class="editable"><a class="anchor" id="luyện-tập" href="#luyện-tập"></a>Luyện tập</h1>
<p>Học phải đi đôi với hành, do đó mình đề xuất cho các bạn <a href="https://codeforces.com/gym/100168">Codeforces Gym 100168</a>. Tuy đề bài trong gym được viết bằng tiếng Nga nhưng rất ngắn gọn và đi thẳng vào bài toán nên các bạn có thể dễ dàng <a href="https://translate.google.com/?hl=vi&amp;sl=ru&amp;tl=en&amp;text=%D0%9F%D1%80%D0%B8%D0%B2%D0%B5%D1%82%2C%20%D0%BC%D0%B8%D1%80&amp;op=translate">google translate</a>.</p>
<p>Bên dưới là một số bài tập có liên quan đến bài viết này, mình đã tóm tắt yêu cầu bài toán để các bạn có thể hiểu đề dễ dàng hơn.</p>
<ul>
<li>
<strong>Codeforces Gym - 100168L</strong>: tính độ độ dài (độ lớn) vector</li>
<li>
<strong>Codeforces Gym - 100168D</strong>: tính diện tích tam giác</li>
<li>
<a href="https://cses.fi/problemset/task/2191"><strong>CSES - Polygon Area</strong></a>: tính diện tích đa giác</li>
<li>
<strong>Codeforces Gym - 100168F</strong>: tính khoảng cách từ 1 điểm đến 1 đường thẳng có dạng $Ax+By+C=0$</li>
<li>
<strong>Codeforces Gym - 100168G</strong>: tính khoảng cách từ 1 điểm đến 1 đường thẳng đi qua 2 điểm</li>
<li>
<strong>Codeforces Gym - 100168H</strong>: tính khoảng cách từ 1 điểm đến 1 tia</li>
<li>
<strong>Codeforces Gym - 100168I</strong>: tính khoảng cách từ 1 điểm đến 1 đoạn thẳng</li>
</ul>
</div>
</div>
</div>
</div>
